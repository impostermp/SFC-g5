name: DEVELOPMENT_CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Clone-down:
    name: Clone down repo
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Upload Repo
      uses: actions/upload-artifact@v3
      with:
        name: code
        path: .

#  Build_docker:
 #   needs: Build
 #   runs-on: ubuntu-latest
 #   steps:
  #  - name: build frontend
 #     run: chmod +x ci/build-docker.sh && ci/build-docker.sh
  #  - name: push docker
  #    run: chmod +x ci/push-docker.sh && ci/push-docker.sh

  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [Clone-down]
    steps:
    - name: Download code
      uses: actions/download-artifact@v3
      with:
        name: code
        path: . 
    - name: Build Frontend
      run: cd frontend && go build frontend
    - name: Build Backend
      run: cd backend && go build backend 
    - name: Upload Repo
      uses: actions/upload-artifact@v3
      with:
        name: code
        path: .
      

    # Steps represent a sequence of tasks that will be executed as part of the job
  Tests:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
    - name: Download code
      uses: actions/download-artifact@v3
      with:
        name: code
        path: . 
    - name: Test frontend
      run: cd frontend && go test
      #ny test
